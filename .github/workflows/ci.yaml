name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  SCCACHE_VERSION: 0.4.2
  RUSTC_WRAPPER: sccache
  SCCACHE_CACHE_SIZE: 2G

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Free disk space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/share/boost
          sudo apt clean
          df -h
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install sccache
        run: |
          SCCACHE_FILE=sccache-v${SCCACHE_VERSION}-x86_64-unknown-linux-musl
          curl -L "https://github.com/mozilla/sccache/releases/download/v${SCCACHE_VERSION}/${SCCACHE_FILE}.tar.gz" | tar xz
          sudo mv ${SCCACHE_FILE}/sccache /usr/local/bin/sccache
          sudo chmod +x /usr/local/bin/sccache
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache sccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-
            ${{ runner.os }}-cargo-
      - name: Cache build output dependencies
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.toml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/Cargo.toml') }}-
            ${{ runner.os }}-build-
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      - name: Start sccache server
        run: sccache --start-server
      - name: Run cargo test
        run: cargo test
      - name: Show sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
      - name: Clean cargo cache
        run: |
          cargo clean -p "LP" || true
          rm -rf target/debug/.fingerprint/LP-*
          rm -rf target/debug/deps/LP-*
          rm -rf target/debug/incremental/LP-*

  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Free disk space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/share/boost
          sudo apt clean
          df -h
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install sccache
        run: |
          SCCACHE_FILE=sccache-v${SCCACHE_VERSION}-x86_64-unknown-linux-musl
          curl -L "https://github.com/mozilla/sccache/releases/download/v${SCCACHE_VERSION}/${SCCACHE_FILE}.tar.gz" | tar xz
          sudo mv ${SCCACHE_FILE}/sccache /usr/local/bin/sccache
          sudo chmod +x /usr/local/bin/sccache
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Cache sccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: ${{ runner.os }}-sccache-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-clippy-
            ${{ runner.os }}-sccache-
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-
            ${{ runner.os }}-cargo-
      - name: Cache build output dependencies
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-build-clippy-${{ hashFiles('**/Cargo.toml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-clippy-${{ hashFiles('**/Cargo.toml') }}-
            ${{ runner.os }}-build-clippy-
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      - name: Start sccache server
        run: sccache --start-server
      - name: Run clippy
        run: cargo clippy -- -A clippy::upper-case-acronyms -A clippy::new-without-default -A clippy::manual-flatten -A clippy::excessive-precision -A clippy::too-many-arguments
      - name: Show sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true

  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --all -- --check || true